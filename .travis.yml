env:
  global:
      - REPO_DIR="pywt"
      - BUILD_COMMIT=v1.1.1
      - PLAT=x86_64
      - UNICODE_WIDTH=32
      - NP_BUILD_DEP="numpy==1.13.3"
      - NP_TEST_DEP="numpy==1.15.4"  # >=1.15 so NumPy works with pytest
      - EXTRA_ARGV="'--disable-pytest-warnings'"

language: python
# Default Python version is usually 2.7
python: 3.6
dist: trusty
services: docker
os: linux

jobs:
  include:
    - env:
        - MB_PYTHON_VERSION=3.6
    - env:
        - MB_PYTHON_VERSION=3.6
        - PLAT=i686
    - env:
        - MB_PYTHON_VERSION=3.7
        - NP_BUILD_DEP=numpy==1.14.5
    - env:
        - MB_PYTHON_VERSION=3.7
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.14.5
    - env:
        - MB_PYTHON_VERSION=3.8
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3
    - env:
        - MB_PYTHON_VERSION=3.8
        - PLAT=i686
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.6
        - MB_PYTHON_OSX_VER=10.9
        - NP_BUILD_DEP=numpy==1.13.3
        - NP_TEST_DEP=numpy==1.15.4
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.7
        - MB_PYTHON_OSX_VER=10.9
        - NP_BUILD_DEP=numpy==1.14.5
        - NP_TEST_DEP=numpy==1.15.4
    - os: osx
      language: generic
      env:
        - MB_PYTHON_VERSION=3.8
        - MB_PYTHON_OSX_VER=10.9
        - NP_BUILD_DEP=numpy==1.17.3
        - NP_TEST_DEP=numpy==1.17.3

before_install:
    - BUILD_DEPENDS="$NP_BUILD_DEP Cython"
    - TEST_DEPENDS="$NP_TEST_DEP pytest pytest-env"
    - source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    - before_install

install:
    # Maybe get and clean and patch source
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT

script:
    - install_run $PLAT

after_success:
    # Upload the generated wheel package to anaconda.org
    # PYWAVELETS_STAGING_UPLOAD_TOKEN is an encrypted variable
    # used in Appveyor CI config, originally created at
    # multibuild-wheels-staging site
    - ANACONDA_ORG="multibuild-wheels-staging";
      TOKEN=${PYWAVELETS_STAGING_UPLOAD_TOKEN};
    - pip install git+https://github.com/Anaconda-Server/anaconda-client;
    - if [ -n "${TOKEN}" ] ; then
        anaconda -t ${TOKEN} upload -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/*.whl;
      fi
